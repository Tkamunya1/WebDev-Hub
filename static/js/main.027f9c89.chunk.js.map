{"version":3,"sources":["Navbar.js","BookList.js","useFetch.js","Home.js","Post.js","Blog.js","About.js","Contact.js","App.js","index.js"],"names":["Navbar","className","to","BookList","books","map","book","title","src","image","alt","body","author","id","useFetch","url","useState","data","setData","isPending","setIsPending","error","setError","useEffect","abortCont","AbortController","setTimeout","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort","Home","Post","setTitle","setBody","setAuthor","his","useHistory","onSubmit","e","preventDefault","method","headers","JSON","stringify","push","type","required","value","onChange","target","Blog","about","Contact","setName","email","setEmail","comment","setComment","info","App","exact","path","About","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.027f9c89.chunk.js","sourcesContent":["import { Link } from 'react-router-dom'\n\n\nconst Navbar = () => {\n    return (\n      <nav className=\"navbar\">\n        <h1>WebDev Hub</h1>\n        <div className=\"links\">\n          <Link to =\"/\">Home</Link>\n          <Link to =\"/create\">New Book</Link>\n          <Link to =\"/blog\">Blog</Link>\n          <Link to =\"/about\">About</Link>\n           <Link to =\"/contact\">Contact</Link>\n\n        </div>\n      </nav>\n    );\n  }\n   \n  export default Navbar;","import { Link } from \"react-router-dom\"\n\n\nconst BookList = ({ books }) => {\n \n\n  return (\n<div className=\"book-list\">\n      {books.map( book => (\n        <div className=\"book-preview\" key={book.id} >\n\n          <h2>{ book.title }</h2>\n          {<img className=\"image-preview\" src={ book.image } alt=\"\"/>}\n          <p>Description: { book.body }</p>\n          <h5>Written by { book.author } </h5>\n          <Link to ={\"url\"} >Order Book </Link>\n\n        </div>\n      ))}\n    </div>\n  );\n}\n \nexport default BookList;\n\n\n","import { useState, useEffect } from 'react';\n\nconst useFetch = (url) => {\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const abortCont = new AbortController();\n\n    setTimeout(() => {\n      fetch(url, { signal: abortCont.signal })\n      .then(res => {\n        if (!res.ok) {\n          throw Error('could not fetch the data for that resource');\n        } \n        return res.json();\n      })\n      .then(data => {\n        setIsPending(false);\n        setData(data);\n        setError(null);\n      })\n      .catch(err => {\n        if (err.name === 'AbortError') {\n          console.log('fetch aborted')\n        } else {\n          setIsPending(false);\n          setError(err.message);\n        }\n      })\n    }, 100);\n\n    return () => abortCont.abort();\n  }, [url])\n\n  return { data, isPending, error };\n}\n \nexport default useFetch;","import BookList from \"./BookList\";\nimport useFetch from \"./useFetch\";\n\n\nconst Home = () => {\n  const { error, isPending, data: books } = useFetch('https://safe-river-01894.herokuapp.com/books')\n\n\n  return (\n    <div className=\"home\">\n      <h1> Web Development Books Under One Roof </h1>\n      { error && <div>{ error }</div> }\n      { isPending && <div>Loading...</div> }\n      {books && <BookList books={books} />}\n    </div>\n  );\n}\n \nexport default Home;","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst Post = () => {\n    const [title, setTitle ]= useState (\"\") \n    const [body, setBody ]= useState (\"\") \n    const [author, setAuthor ]= useState (\"\") \n    const his = useHistory()\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const book = { title, body, author };\n    \n        fetch('https://safe-river-01894.herokuapp.com/books', {\n          method: 'POST',\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(book)\n        }).then(() => {\n          console.log('new book added');\n          his.push('/')\n        })\n      }\n\n    return (\n        <div className = \"post-book\">\n            <h1> Post a New Book </h1>\n            <form onSubmit={handleSubmit}>\n                <label> Book Title </label>\n                <input\n                 type=\"text\" \n                 required\n                 value={title}\n                 onChange={(e) => setTitle(e.target.value)}\n                 />\n                 <label> Book Body  </label>\n                 <textarea \n                 required\n                 value={body}\n          onChange={(e) => setBody(e.target.value)}\n                 >\n                 </textarea>\n                 <label> Author  </label>\n                <input\n                 type=\"text\" \n                 required\n                 value={author}\n          onChange={(e) => setAuthor(e.target.value)}\n                 />\n                 <button>Add Book </button>\n            </form>\n            </div>\n     );\n}\n \nexport default Post;","const Blog = () => {\n    return ( \n        <div className=\"container\">\n            <div className=\"blog-1\">\n                <h1>Coding Tips for Beginners</h1>\n                <p>\n                It seems like there’s always something new to learn in the world of computer programming. Regardless of where you are in your computer programming and coding education, going the extra mile will ensure you have all the knowledge you need to succeed. Check out these seven tips to help you learn how to become a computer programmer faster and more efficiently.\n                </p>\n                <h2>\n                Focus on the Fundamentals\n                </h2>\n                <p>Think you don’t need to go over the basics? Think again. Like in any field, getting a good grasp of the fundamentals is critically important to achieving long-term success. The information you learn at the beginning of your programming education or coding bootcamp will allow you to grasp the logic of more complicated topics further along. If you don’t learn basic computer programming, you could fall behind in the future. So, even if the fundamentals seem boring or unimportant at first, you need to recognize how essential it is to learn them.</p>\n                 <h2>Learn to Ask for Help</h2>\n                 <p>Knowing when to ask for help is a skill you’ll need throughout the course of your life, not just in your coding career. The fact of the matter is, you aren’t going to know everything, especially when you’re just starting out. The fastest and easiest way to gain the skills you need to have for a successful coding career is to ask those who have the answers. After you try to figure out the answer to your question on your own, be sure to ask someone else. Whether you do it in person or online, speaking to your mentor or teacher and listening to what they have to say is critical when you are learning to become a computer programmer.</p>\n            </div>\n        </div>\n     );\n}\n \nexport default Blog;","const about = () => {\n    return (\n        <div className=\"container\">\n            <h1>Welcome to Webdev Pub</h1>\n            <p>\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Corporis, officia! Cum reiciendis natus rerum soluta quod numquam, esse neque aspernatur in maxime nihil rem excepturi, quaerat sit ratione voluptatibus totam.\n            </p>\n        </div>\n      );\n}\n \nexport default about;","import React from 'react'\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Contact() {\n    const [name, setName ]= useState (\"\") \n    const [email, setEmail ]= useState (\"\") \n    const [comment, setComment ]= useState (\"\") \n    const his = useHistory()\n\n    const handleSubmit = (e) => {\n      e.preventDefault();\n      const info = { name, email, comment };\n\n      fetch('https://mighty-headland-85949.herokuapp.com/contacts', {\n        method: 'POST',\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(info)\n      }).then(() => {\n        console.log(\"new comment added\");\n        his.push('/contact')\n        \n      })\n    }\n\n  return (\n    // <div>Contact</div>\n    <div className = \"post-feedback\">\n            <h1> Leave feedback</h1>\n            <form onSubmit={handleSubmit}>\n                <label> Name</label>\n                <input\n                 type=\"text\" \n                 required\n                 value={name}\n                 onChange={(e) => setName(e.target.value)}\n                 />\n                 <label> Email</label>\n                 <input \n                 required\n                 value={email}\n                 onChange={(e) => setEmail(e.target.value)}\n                 >\n                 </input>\n                 <label> comment</label>\n                <textarea\n                 type=\"text\" \n                 required\n                 value={comment}\n                 onChange={(e) => setComment(e.target.value)}\n                 />\n                 <button>Submit </button>\n            </form>\n            </div>\n     );\n}\nexport default Contact;","import Navbar from './Navbar';\nimport Home from './Home';\nimport Post from \"./Post\"\nimport Blog from \"./Blog\"\nimport About from \"./About\"\nimport Contact from \"./Contact\"\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport BookDetails from './BookDetails';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <div className=\"content\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route exact path=\"/create\">\n              <Post/>\n            </Route>\n            <Route path=\"/books/:id\">\n              <BookDetails/>\n            </Route>\n            \n            <Route exact path=\"/blog\">\n              <Blog/>\n            </Route>\n\n            <Route exact path=\"/about\">\n              <About/>\n            </Route>\n\n            <Route exact path=\"/contact\">\n              <Contact/>\n            </Route>\n\n\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n\n//<Route exact path='/'> <home/> </Route>\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}