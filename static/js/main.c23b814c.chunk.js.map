{"version":3,"sources":["Navbar.js","BlogList.js","useFetch.js","Home.js","Post.js","BookDetails.js","App.js","index.js"],"names":["Navbar","className","to","BlogList","blogs","map","blog","title","author","id","useFetch","url","useState","data","setData","isPending","setIsPending","error","setError","useEffect","abortCont","AbortController","setTimeout","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort","Home","Post","setTitle","body","setBody","setAuthor","type","required","value","onChange","e","target","BookDetails","useParams","App","exact","path","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.c23b814c.chunk.js","sourcesContent":["import { Link } from 'react-router-dom'\n\n\nconst Navbar = () => {\n    return (\n      <nav className=\"navbar\">\n        <h1>WebDev Hub</h1>\n        <div className=\"links\">\n          <Link to =\"/\">Home</Link>\n          <Link to =\"/create\">New Book</Link>\n        </div>\n      </nav>\n    );\n  }\n   \n  export default Navbar;","import { Link } from \"react-router-dom\"\n\nconst BlogList = ({ blogs }) => {\n  return (\n<div className=\"blog-list\">\n      {blogs.map(blog => (\n        <div className=\"blog-preview\" key={blog.id} >\n          <Link to= { `/blogs/ $ {blog.id}` } > \n          <h2>{ blog.title }</h2>\n          <h3>Written by { blog.author }</h3>\n          </Link>\n        </div>\n      ))}\n    </div>\n  );\n}\n \nexport default BlogList;","import { useState, useEffect } from 'react';\n\nconst useFetch = (url) => {\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const abortCont = new AbortController();\n\n    setTimeout(() => {\n      fetch(url, { signal: abortCont.signal })\n      .then(res => {\n        if (!res.ok) {\n          throw Error('could not fetch the data for that resource');\n        } \n        return res.json();\n      })\n      .then(data => {\n        setIsPending(false);\n        setData(data);\n        setError(null);\n      })\n      .catch(err => {\n        if (err.name === 'AbortError') {\n          console.log('fetch aborted')\n        } else {\n          setIsPending(false);\n          setError(err.message);\n        }\n      })\n    }, 100);\n\n    return () => abortCont.abort();\n  }, [url])\n\n  return { data, isPending, error };\n}\n \nexport default useFetch;","import BlogList from \"./BlogList\";\nimport useFetch from \"./useFetch\";\n\n\nconst Home = () => {\n  const { error, isPending, data: blogs } = useFetch('https://safe-citadel-50910.herokuapp.com/blogs')\n\n  return (\n    <div className=\"home\">\n      <h1> Web Development Books Under One Roof </h1>\n      { error && <div>{ error }</div> }\n      { isPending && <div>Loading...</div> }\n      {blogs && <BlogList blogs={blogs} />}\n    </div>\n  );\n}\n \nexport default Home;","import { useState } from \"react\";\n\n\nconst Post = () => {\n    const [title, setTitle ]= useState (\"\") \n    const [body, setBody ]= useState (\"\") \n    const [author, setAuthor ]= useState (\"\") \n\n    return (\n        <div className = \"post-book\">\n            <h1> Post a New Book </h1>\n            <form>\n                <label> Book Title </label>\n                <input\n                 type=\"text\" \n                 required\n                 value={title}\n                 onChange={(e) => setTitle(e.target.value)}\n                 />\n                 <label> Book Body  </label>\n                 <textarea \n                 required\n                 value={body}\n          onChange={(e) => setBody(e.target.value)}\n                 >\n                 </textarea>\n                 <label> Author  </label>\n                <input\n                 type=\"text\" \n                 required\n                 value={author}\n          onChange={(e) => setAuthor(e.target.value)}\n                 />\n                 <button>Add Book </button>\n            </form>\n            </div>\n     );\n}\n \nexport default Post;","import { useParams } from \"react-router-dom\";\nimport useFetch from \"./useFetch\";\n\nconst BookDetails = () => {\n  const { id } = useParams();\n  const { data: blog, error, isPending } = useFetch('https://safe-citadel-50910.herokuapp.com/blogs' + id );\n\n  return (\n    <div className=\"book-details\">\n      { isPending && <div>Loading...</div> }\n      { error && <div>{ error }</div> }\n      { blog && (\n        <book>\n          <h2>{ blog.title }</h2>\n          <p>Written by { blog.author }</p>\n          <div>{ blog.body }</div>\n        </book>\n      )}\n    </div>\n  );\n}\n \nexport default BookDetails;\n\n\n\n\n//https://safe-citadel-50910.herokuapp.com/blogs\n","import Navbar from './Navbar';\nimport Home from './Home';\nimport Post from \"./Post\"\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport BookDetails from './BookDetails';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <div className=\"content\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route exact path=\"/create\">\n              <Post/>\n            </Route>\n            <Route path=\"/blogs/:id\">\n              <BookDetails/>\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}