{"version":3,"sources":["Navbar.js","BookList.js","useFetch.js","Home.js","Post.js","App.js","index.js"],"names":["Navbar","className","to","BookList","books","map","book","title","src","image","alt","body","author","id","useFetch","url","useState","data","setData","isPending","setIsPending","error","setError","useEffect","abortCont","AbortController","setTimeout","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort","Home","Post","setTitle","setBody","setAuthor","his","useHistory","onSubmit","e","preventDefault","method","headers","JSON","stringify","push","type","required","value","onChange","target","App","exact","path","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.4e49691f.chunk.js","sourcesContent":["import { Link } from 'react-router-dom'\n\n\nconst Navbar = () => {\n    return (\n      <nav className=\"navbar\">\n        <h1>WebDev Hub</h1>\n        <div className=\"links\">\n          <Link to =\"/\">Home</Link>\n          <Link to =\"/create\">New Book</Link>\n        </div>\n      </nav>\n    );\n  }\n   \n  export default Navbar;","import { Link } from \"react-router-dom\"\n\n\nconst BookList = ({ books }) => {\n \n\n  return (\n<div className=\"book-list\">\n      {books.map( book => (\n        <div className=\"book-preview\" key={book .id} >\n\n          <h2>{ book .title }</h2>\n          {<img className=\"image-preview\" src={ book .image } alt=\"\"/>}\n          <p>Description: { book .body }</p>\n          <h5>Written by { book .author } </h5>\n          <Link to ={\"url\"} >Order Book </Link>\n\n        </div>\n      ))}\n    </div>\n  );\n}\n \nexport default BookList;\n\n\n","import { useState, useEffect } from 'react';\n\nconst useFetch = (url) => {\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const abortCont = new AbortController();\n\n    setTimeout(() => {\n      fetch(url, { signal: abortCont.signal })\n      .then(res => {\n        if (!res.ok) {\n          throw Error('could not fetch the data for that resource');\n        } \n        return res.json();\n      })\n      .then(data => {\n        setIsPending(false);\n        setData(data);\n        setError(null);\n      })\n      .catch(err => {\n        if (err.name === 'AbortError') {\n          console.log('fetch aborted')\n        } else {\n          setIsPending(false);\n          setError(err.message);\n        }\n      })\n    }, 100);\n\n    return () => abortCont.abort();\n  }, [url])\n\n  return { data, isPending, error };\n}\n \nexport default useFetch;","import BookList from \"./BookList\";\nimport useFetch from \"./useFetch\";\n\n\nconst Home = () => {\n  const { error, isPending, data: books } = useFetch('https://safe-river-01894.herokuapp.com/books')\n\n\n  return (\n    <div className=\"home\">\n      <h1> Web Development Books Under One Roof </h1>\n      { error && <div>{ error }</div> }\n      { isPending && <div>Loading...</div> }\n      {books && <BookList books={books} />}\n    </div>\n  );\n}\n \nexport default Home;","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst Post = () => {\n    const [title, setTitle ]= useState (\"\") \n    const [body, setBody ]= useState (\"\") \n    const [author, setAuthor ]= useState (\"\") \n    const his = useHistory()\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const book = { title, body, author };\n    \n        fetch('https://safe-river-01894.herokuapp.com/books', {\n          method: 'POST',\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(book)\n        }).then(() => {\n          console.log('new book added');\n          his.push('/')\n        })\n      }\n\n    return (\n        <div className = \"post-book\">\n            <h1> Post a New Book </h1>\n            <form onSubmit={handleSubmit}>\n                <label> Book Title </label>\n                <input\n                 type=\"text\" \n                 required\n                 value={title}\n                 onChange={(e) => setTitle(e.target.value)}\n                 />\n                 <label> Book Body  </label>\n                 <textarea \n                 required\n                 value={body}\n          onChange={(e) => setBody(e.target.value)}\n                 >\n                 </textarea>\n                 <label> Author  </label>\n                <input\n                 type=\"text\" \n                 required\n                 value={author}\n          onChange={(e) => setAuthor(e.target.value)}\n                 />\n                 <button>Add Book </button>\n            </form>\n            </div>\n     );\n}\n \nexport default Post;","import Navbar from './Navbar';\nimport Home from './Home';\nimport Post from \"./Post\"\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport BookDetails from './BookDetails';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <div className=\"content\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route exact path=\"/create\">\n              <Post/>\n            </Route>\n            <Route path=\"/books/:id\">\n              <BookDetails/>\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n\n//<Route exact path='/'> <home/> </Route>\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}